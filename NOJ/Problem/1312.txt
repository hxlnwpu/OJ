    1312.TCP之拥塞控制
   
    时限：1000ms 内存限制：10000K  总时限：3000ms
   
    描述
   
    TCP中具备一系列拥塞控制机制以充分利用网络带宽，同时保证每个TCP连接的公平性。
    
    例如A、B、C、D如图所示连接，若AC、BC、CD间的带宽均为100M，则当A->D、B->D同时数据流通信时，理想状况下应各占50M的带宽。
    
    A
    
    \
    
    \
    
    C-----D
    
    /
    
    /
    
    B
    
    然而现实中A、B均无法获知CD间的带宽，因此A、B都应尽量以最快的速率通信同时保证数据包不丢失。TCP中使用了慢启动与AIMD算法以保证每个TCP连接的公平性同时充分利用网络带宽。
    
    为了便于理解，TCP的拥塞控制机制可简化如下：网络拓扑固定为图中所示的结构，发送端A、B初始发送速率为Va,Vb，每过一个时间单位发送速率加1，如果AC或BC的速率大于信道本身的带宽，或者AC与BC速率之和大于CD，都会出现丢包，发送端立即将发送速率减半。通过这种方法，各个TCP连接的传输速率会逐渐趋于稳定。
    
    以下是一个拥塞控制的一个例子，t表示时间，t=0时为初始速度。t=1，Va应为1，Vb应为11，但由于Va+Vb=12超过了CD间的带速，因此各自将发送速率减半（结果只保留整数部分），Va=1/2=0，Vb=11/2=5，依此类推。
    
    t 0 1 2 3 4 5 6 7 8 9 0 1 2 ...
    
    ---------------------------------
    
    Va 0 0 1 2 1 2 3 2 3 4 2 3 4 ...
    
    Vb 10 5 6 7 4 5 6 3 4 5 3 4 5 ...
    
    可以看到，Va和Vb的传输速率在某个范围内循环，且数值较为接近。现请计算进入这种稳定状态需要的单位时间数。(如本例中花了7个单位的时间调整速率)。
    
    输入
   
    AB,BC,CD间的带宽
   
    输出
   
    进入稳定状态需要的单位时间数。
   
    输入样例
   
    10 10 10
    
    0 10
    
    输出样例
   
    7
    
    提示
   
    来源
   
