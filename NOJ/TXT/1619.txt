    1619.黑洞数字
   
    时限：5000ms 内存限制：10000K  总时限：10000ms
   
    描述
   
    该题目的黑洞操作是“重排求差”
    
    假设我们的操作数是 297 。
    
    首先我们分离各位，然后分别排序得到 972 和 279 , 972 - 279 = 693 。
    
    对 693 进行排序 ， 得到 963 和369 , 963 - 369 = 594 。
    
    接下来同理可以得到 954 - 459 = 495 。
    
    此后永远在 495 上面循环 ， 这样的数 （如495）为一个黑洞数。
    
    我们定义函数 F(x) 为 从 x 到使 x 变成黑洞数所需的步骤。
    
    显然 ， F(495) = 0 , F(954) = 1 。（其余数字同理）
    
    输入两个数字 S 和 T ， 求 F( S ) + F( S+1 ) + 贩贩贩 + F( T-1 ) + F( T ) 。
   
    输入
   
    第一行有空格分开的两个数，分别为 S 和 T 。
   
    输出
   
    输出仅一个数，为 F( S ) + F( S+1 ) + 贩贩贩 + F( T-1 ) + F( T ) 的结果。
   
    输入样例
   
    1 10
   
    输出样例
   
    11
   
    提示
   
    0 <= S <= T <= 700000
    
    对于循环圈的数字，每个循环圈的成员的函数值都是 0 。
   
    来源
   
    RedContritio
   
