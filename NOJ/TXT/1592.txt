    1592.利用背包的密码体制
   
    时限：1000ms 内存限制：10000K  总时限：3000ms
   
    描述
   
    利用背包的密码体制的解密的计算相当的简单，相当于把一个数拆成多个数的和即可，
    
    例如：有16个数分别为：1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768
    
    再给定一个小于65536的非负整数如76,它可唯一的分成上面16个数中某些数的和
    
    76 = 64 + 8 + 4
    
    从而得到解密后的密码为这几个数对应的位上是1，其余位是0的一个16位的二进制数。
    
    所以76就对应0011001000000000，从而达到解密的目的。
    
    你可能会说，那么这样破译者不是也能很容易解密了吗，实际上不是的，找两个互素的整数，例如941和68372，给那16个2的幂和76都乘以941并对68372取模，破译者将在那个空间上做同样的问题，难度是很大的。
    
    输入一个小于65536的非负整数，输出解密后的16位二进制数。
   
    输入
   
    输入一个小于65536的非负整数。
   
    输出
   
    输出解密后的16位二进制数。
   
    输入样例
   
    76
   
    输出样例
   
    0011001000000000
    
    提示
   
    来源
   
